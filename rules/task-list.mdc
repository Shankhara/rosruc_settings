---
description: 
globs: 
alwaysApply: true
---
# Task List Management

## Description
Ce fichier d√©finit les r√®gles pour g√©rer la liste des t√¢ches dans le dossier `./tasks`. Il guide l'agent IA de Cursor pour suivre, mettre √† jour et documenter les t√¢ches d'un projet, en suivant le pattern "Task Manager" pour un plan √† long terme.

## Emplacement des fichiers
1. **Tous les fichiers de gestion de t√¢ches doivent √™tre cr√©√©s dans le dossier `tasks`**
   - Si absent, cr√©er un dossier `./tasks`.
   - Pour chaque fonctionnalite creer un fichier dans le dossier `tasks`, avec `FEATURE_NAME`
   - Respecter l'arborescence existante : jamais cr√©er de fichiers √† la racine du projet

2. **V√©rification syst√©matique du Task Manager**
   - Au d√©but de chaque session, v√©rifier le dossier `./tasks` pour identifier les projets en cours
   - Consulter les fichiers `tasks` dans les sous-dossiers pour conna√Ætre l'√©tat des t√¢ches
   - Toujours se r√©f√©rer aux t√¢ches existantes avant d'en proposer de nouvelles

## Structure du fichier FEATURE_NAME
1. Cr√©ez un fichier Markdown nomm√© `tasks` dans le sous-dossier appropri√© du dossier `./tasks` :
   - Ajoutez un titre clair (ex. `# Liste des t√¢ches`) et une br√®ve description du projet ou de la fonctionnalit√©.
2. Structurez le fichier avec ces sections :
   - `## √Ä faire` : T√¢ches non commenc√©es.
   - `## En cours` : T√¢ches en cours de r√©alisation.
   - `## Termin√©` : T√¢ches achev√©es.
   - `## üìÅ Fichiers pertinents` : Liste des fichiers li√©s au projet.
   - `## üîß D√©tails d'impl√©mentation` : Notes sur l'architecture ou les d√©cisions techniques.

## R√®gles de mise √† jour
### 1. Mettre √† jour la liste des t√¢ches au fur et √† mesure
- Marquez les t√¢ches termin√©es en changeant `[ ]` en `[x]` ou en les d√©pla√ßant vers la section "Termin√©"
- Ajoutez de nouvelles t√¢ches identifi√©es pendant le d√©veloppement
- D√©placez les t√¢ches entre les sections selon leur √©tat (ex. de "√Ä faire" √† "En cours")
- Utilisez des indicateurs visuels de statut (‚è≥, üîÑ, ‚úÖ) pour plus de clart√©

### 2. Garder la section "Fichiers pertinents" √† jour
- Incluez les chemins des fichiers cr√©√©s ou modifi√©s
- Ajoutez une courte description de leur r√¥le
- Utilisez des indicateurs d'√©tat si n√©cessaire

### 3. Documenter les d√©tails d'impl√©mentation
- Notez les d√©cisions d'architecture
- D√©crivez les flux de donn√©es
- Listez les composants techniques n√©cessaires
- Pr√©cisez la configuration de l'environnement si pertinent

## Instructions pour l'IA
Lorsque l'IA travaille avec la liste des t√¢ches, elle doit :
1. **TOUJOURS** v√©rifier d'abord dans le dossier `./tasks` si un projet correspondant existe d√©j√†
2. Si un projet existe, consulter le fichier `tasks` correspondant pour :
   - Identifier les t√¢ches en cours et leur priorit√©
   - Comprendre l'architecture globale du projet
   - Se familiariser avec les fichiers pertinents
3. Si un nouveau projet est cr√©√© :
   - Cr√©er un nouveau sous-dossier dans `./tasks` avec un nom significatif
   - Initialiser un fichier `tasks` avec la structure recommand√©e
   - √âventuellement cr√©er un fichier de planification d√©taill√© (comme `create-beeven-scan.md`)
4. Pour chaque session de travail :
   - Mettre √† jour le statut des t√¢ches dans le fichier appropri√©
   - Ajouter les nouveaux fichiers √† la section "Fichiers pertinents"
   - Documenter les d√©cisions techniques importantes

## Exemple de structure pour un sous-dossier de projet
```
/./tasks
  /create-beeven-scan
    create-beeven-scan.md  # Documentation d√©taill√©e du projet
  /refactor-auth
    auth-architecture.md
```

```markdown
# Feature X - Liste des T√¢ches

## üöÄ Vue d'ensemble
Description concise de la feature X.

## √Ä faire
- [ ] T√¢che 1
- [ ] T√¢che 2

## En cours
- üîÑ T√¢che 3 (commenc√©e le 01/01/2023)

## Termin√©
- ‚úÖ T√¢che 4 (termin√©e le 30/12/2022)

## üìÅ Fichiers pertinents
- `src/components/Component.tsx` - Description du composant
- `src/services/api.ts` - Service d'API pour le projet

## üîß D√©tails d'impl√©mentation
Architecture et choix techniques pour le projet X.
``` %